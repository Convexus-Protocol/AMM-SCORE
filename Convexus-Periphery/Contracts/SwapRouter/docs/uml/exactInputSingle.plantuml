@startuml Tokens Swap

' Send the tokens to the SwapRouter contract
recipient -> Token0 : **transfer** ( \n\
   SwapRouter, \n\
   amount0, { \n\
     "method":"exactInputSingle", \n\
     "params": {\n\
       "tokenOut": token1, \n\
       "fee": fee, \n\
       "recipient": recipient, \n\
       "deadline": deadline, \n\
       "amountOutMinimum": amountOutMinimum, \n\
       "sqrtPriceLimitX96": sqrtPriceLimitX96 \n\
    } \n\
  } \n\
)

Token0 -> SwapRouter : **tokenFallback** ( \n\
   recipient, \n\
   amount0, { \n\
     "method":"exactInputSingle", \n\
     "params": {\n\
       "tokenOut": token1, \n\
       "fee": fee, \n\
       "recipient": recipient, \n\
       "deadline": deadline, \n\
       "amountOutMinimum": amountOutMinimum, \n\
       "sqrtPriceLimitX96": sqrtPriceLimitX96 \n\
    } \n\
  } \n\
)

SwapRouter -> ConvexusFactory : **getPool** ( \n\
  "token0": token0, \n\
  "token1": token1, \n\
  "fee": fee, \n\
)

' The SwapRouter contract performs the swap method
SwapRouter -> ConvexusPool : **swap** ( \n\
  recipient, \n\
  true, \n\
  amount0, \n\
  sqrtPriceLimitX96, \n\
  bytes(SwapCallbackData) \n\
)

group#Gold #LightBlue Core Layer
  rnote over ConvexusPool
    Tokens Swap process
  endrnote
end

@enduml