version = '0.9.1'

// for integration tests
sourceSets {
    intTest {}
}
configurations {
    intTestImplementation.extendsFrom testImplementation
    intTestRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
    compileOnly 'foundation.icon:javaee-api:0.9.0'
    testImplementation project(':Switchy-Utils')
    testImplementation project(':Switchy-Tests')
    testImplementation project(':Switchy-Factory')
    testImplementation project(':unittest')
    // testImplementation 'foundation.icon:javaee-unittest:0.9.1'

    testImplementation 'org.mockito:mockito-inline:3.11.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
    
    testImplementation project(':testinteg')
    testImplementation 'foundation.icon:icon-sdk:2.0.0'
    testRuntimeOnly project(':Switchy-Factory')
}

test {
    useJUnitPlatform()
}

def thisJar = project(':Switchy-Factory').getTasks().getByName('optimizedJar')

task integrationTest(type: Test) {
    useJUnitPlatform()
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath
    testLogging.showStandardStreams = true

    // use the common config files
    systemProperty('env.props', new File(project(':testinteg').projectDir, 'conf/env.props'))

    def prefix = 'score.path.'
    systemProperty(prefix + project.name, optimizedJar.outputJarName)
    systemProperty(prefix + 'Switchy-Factory', thisJar.outputJarName)
}

integrationTest.dependsOn(thisJar)